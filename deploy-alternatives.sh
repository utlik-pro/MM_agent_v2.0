#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –¥–ª—è –æ–±—Ö–æ–¥–∞ VPN –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π

echo "üöÄ –î–µ–ø–ª–æ–π voice assistant widget –Ω–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã..."
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "package.json" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: package.json –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞."
    exit 1
fi

# –ë–∏–ª–¥–∏–º –ø—Ä–æ–µ–∫—Ç
echo "üì¶ –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç..."
cd frontend
npm install
npm run build

if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞"
    exit 1
fi

cd ..

echo "‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ"
echo ""

# Netlify
echo "üåê –î–µ–ø–ª–æ–π –Ω–∞ Netlify..."
if command -v netlify &> /dev/null; then
    netlify deploy --prod --dir=frontend/dist
    echo "‚úÖ Netlify –¥–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω"
else
    echo "‚ö†Ô∏è  Netlify CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: npm install -g netlify-cli"
    echo "   –ó–∞—Ç–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: netlify deploy --prod --dir=frontend/dist"
fi
echo ""

# Railway
echo "üöÇ –î–µ–ø–ª–æ–π –Ω–∞ Railway..."
if command -v railway &> /dev/null; then
    railway deploy
    echo "‚úÖ Railway –¥–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω"
else
    echo "‚ö†Ô∏è  Railway CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: npm install -g @railway/cli"
    echo "   –ó–∞—Ç–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: railway deploy"
fi
echo ""

# Vercel (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∏–Ω—Å—Ç–∞–Ω—Å)
echo "‚ñ≤ –î–µ–ø–ª–æ–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∏–Ω—Å—Ç–∞–Ω—Å–∞ –Ω–∞ Vercel..."
if command -v vercel &> /dev/null; then
    vercel --prod --name=voice-widget-backup
    echo "‚úÖ Vercel backup –¥–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω"
else
    echo "‚ö†Ô∏è  Vercel CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: npm install -g vercel"
    echo "   –ó–∞—Ç–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: vercel --prod --name=voice-widget-backup"
fi
echo ""

# –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å fallback —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞–º–∏
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ fallback —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤..."

cat > frontend/src/config/endpoints.ts << 'EOF'
// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è fallback —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
export const FALLBACK_ENDPOINTS = [
  {
    name: 'primary',
    baseUrl: window.location.origin,
    tokenUrl: '/api/token'
  },
  {
    name: 'netlify-backup',
    baseUrl: 'https://voice-widget-backup.netlify.app',
    tokenUrl: '/api/token'
  },
  {
    name: 'railway-backup', 
    baseUrl: 'https://voice-widget-backup.railway.app',
    tokenUrl: '/api/token'
  },
  {
    name: 'vercel-backup',
    baseUrl: 'https://voice-widget-backup.vercel.app',
    tokenUrl: '/api/token'
  }
];

export function getAvailableEndpoint() {
  // –õ–æ–≥–∏–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞
  return FALLBACK_ENDPOINTS[0];
}
EOF

echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è endpoints.ts —Å–æ–∑–¥–∞–Ω–∞"
echo ""

# CloudFlare Workers –¥–µ–ø–ª–æ–π
echo "‚òÅÔ∏è  –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ CloudFlare Workers..."
if [ ! -d "workers" ]; then
    mkdir workers
fi

cat > workers/widget-proxy.js << 'EOF'
// CloudFlare Worker –¥–ª—è –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤
export default {
  async fetch(request, env, ctx) {
    const url = new URL(request.url);
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä
    const MAIN_SERVER = 'https://mm-agent-v2-0-pktp1axdp-atamanpros-projects.vercel.app';
    
    // –ü—Ä–æ–∫—Å–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å
    const targetUrl = MAIN_SERVER + url.pathname + url.search;
    
    const response = await fetch(targetUrl, {
      method: request.method,
      headers: request.headers,
      body: request.body,
    });
    
    // –ö–ª–æ–Ω–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –∏ –¥–æ–±–∞–≤–ª—è–µ–º CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏
    const newResponse = new Response(response.body, response);
    
    newResponse.headers.set('Access-Control-Allow-Origin', '*');
    newResponse.headers.set('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');
    newResponse.headers.set('Access-Control-Allow-Headers', 'Content-Type, Authorization');
    newResponse.headers.set('X-Frame-Options', 'ALLOWALL');
    
    return newResponse;
  },
};
EOF

cat > workers/wrangler.toml << 'EOF'
name = "voice-widget-proxy"
main = "widget-proxy.js"
compatibility_date = "2024-01-01"

[env.production]
routes = [
  { pattern = "widget-proxy.your-domain.workers.dev/*", zone_name = "your-domain.com" }
]
EOF

echo "‚úÖ CloudFlare Workers –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞ –≤ –ø–∞–ø–∫–µ workers/"
echo ""

# –°–æ–∑–¥–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π embed –∫–æ–¥
cat > embed-code.html << 'EOF'
<!-- –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π embed –∫–æ–¥ —Å fallback –¥–ª—è –æ–±—Ö–æ–¥–∞ VPN –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π -->
<script>
(async function() {
  const WIDGET_DOMAINS = [
    'https://mm-agent-v2-0-pktp1axdp-atamanpros-projects.vercel.app',
    'https://voice-widget-backup.netlify.app',
    'https://voice-widget-backup.railway.app',
    'https://widget-proxy.your-domain.workers.dev'
  ];
  
  let loaded = false;
  
  async function loadWidget() {
    for (const domain of WIDGET_DOMAINS) {
      if (loaded) break;
      
      try {
        console.log(`–ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∏–¥–∂–µ—Ç —Å: ${domain}`);
        
        const iframe = document.createElement('iframe');
        iframe.src = `${domain}/widget`;
        iframe.style.cssText = `
          border: 0;
          width: 100px;
          height: 50px;
          position: fixed;
          bottom: 20px;
          right: 20px;
          z-index: 1000;
          border-radius: 8px;
          box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        `;
        iframe.allow = 'microphone';
        iframe.title = 'Voice Assistant Widget';
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å —Ç–∞–π–º–∞—É—Ç–æ–º
        await new Promise((resolve, reject) => {
          const timeout = setTimeout(() => {
            iframe.remove();
            reject(new Error('Timeout'));
          }, 5000);
          
          iframe.onload = () => {
            clearTimeout(timeout);
            loaded = true;
            console.log(`‚úÖ –í–∏–¥–∂–µ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω —Å: ${domain}`);
            resolve(true);
          };
          
          iframe.onerror = () => {
            clearTimeout(timeout);
            iframe.remove();
            reject(new Error('Load error'));
          };
        });
        
        document.body.appendChild(iframe);
        break;
        
      } catch (error) {
        console.warn(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å ${domain}:`, error.message);
        continue;
      }
    }
    
    if (!loaded) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∏–¥–∂–µ—Ç –Ω–∏ —Å –æ–¥–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞');
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      const notification = document.createElement('div');
      notification.style.cssText = `
        position: fixed;
        bottom: 20px;
        right: 20px;
        background: #ef4444;
        color: white;
        padding: 12px;
        border-radius: 8px;
        font-family: system-ui;
        font-size: 14px;
        z-index: 1001;
        max-width: 300px;
      `;
      notification.textContent = '–í–∏–¥–∂–µ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.';
      
      document.body.appendChild(notification);
      
      setTimeout(() => notification.remove(), 10000);
    }
  }
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', loadWidget);
  } else {
    loadWidget();
  }
})();
</script>
EOF

echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π embed –∫–æ–¥ —Å–æ–∑–¥–∞–Ω –≤ —Ñ–∞–π–ª–µ embed-code.html"
echo ""

echo "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
echo ""
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –î–æ–±–∞–≤—å—Ç–µ –¥–æ–º–µ–Ω—ã –≤ CloudFlare –∏ –≤–∫–ª—é—á–∏—Ç–µ –ø—Ä–æ–∫—Å–∏"
echo "2. –î–µ–ø–ª–æ–π—Ç–µ CloudFlare Worker: cd workers && wrangler deploy"
echo "3. –ó–∞–º–µ–Ω–∏—Ç–µ embed –∫–æ–¥ –Ω–∞ —Å–∞–π—Ç–µ –Ω–∞ –∫–æ–¥ –∏–∑ embed-code.html"
echo "4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∏–∑ —Ä–∞–∑–Ω—ã—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤"
echo ""
echo "üåç –í–∞—à –≤–∏–¥–∂–µ—Ç —Ç–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–µ–Ω –±–µ–∑ VPN!"